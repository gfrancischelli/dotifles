var mongoose = require('mongoose');
var Project = mongoose.model('Project');


exports.index = function(req, res) {
    const session = req.session;
}

exports.byID = function(req, res) {
    const params = req.params;
    console.log(`Finding project _id: ${params.projectid}`);

    if ( req.session.loggedIn !== true ) {
        res.redirect('/login')
    }
    else {
        if (params.projectid) {
            Project.findById ( params.projectid, function(err, project) {
                if(err) {
                    console.log(err);
                    res.redirect('/user?404=project');
                }
                else {
                    console.log(project);
                    res.render('project-page', {
                        title: project.projectName,
                        projectName: project.projectName,
                        tasks: project.tasks,
                        createdBy: project.createdBy,
                        projectID: project._id,
                    });
                }
            })
        }
        else {
            res.redirect('/user');
        }
    }
};


exports.byUser = function(req, res) { 
    console.log('Getting user projects');

    if (req.params.userid) {
        Project.findByUserID(
            req.params.userid,
            function(err, projects) {
                if (!err ) {
                    console.log(projects);
                    res.json(projects);
                }
                else {
                    console.log(err);
                    res.json({"status": "error", "error": "Error finding projects"});
                }
            });
    }
    else {
        console.log(err);
        res.json({ "status": "error", "error": "No userid supplied" });
    }
};


exports.create = function(req, res) {
    console.log('render project-forM')
    res.render('project-form', {
        title: 'Create Project',
        buttonText: 'Create',
    });
};

exports.doCreate= function(req, res) {
    const name = req.body.ProjectName;
    const tasks = req.body.Tasks;

    console.log('name', name)
    Project.create({
        projectName: name,
        tasks: tasks,
        createdBy: req.session.user._id,
        modifiedOn: Date.now()
    }, function(err, project) {
        if(err) {
            console.log(err);
            if(err.code = 1100) {
                res.redirect('/project/new?exists=true');
            } else {
                res.redirect( '/?error=true');
            }
        }
        else {
            console.log(`Project created and saved: ${project}`)
            res.redirect('/user');
        }

    });
 }


 exports.edit = function(req, res) {
    if (req.session.loggedIn !== true) {
        res.redirect('/login');
    }
    else {
        const params = req.params;
        Project.findById(params.id, function(err, project) {
            if(err) { res.redirect('/project?error=notfound')}
            else {
                res.render('project-form', {
                    name: project.projectName,
                    tasks: project.tasks,
                    _id: project._id,
                    buttonText: 'Save'
                })
            }
        })
    }
 }

 exports.doEdit = function(req, res) {
     console.log('doedit')
     if (req.session.loggedIn !== true) {
         res.redirect('/login');
     }
     else {
        const params = req.params;
        Project.findById(params.id, function(err, project) {
            if (err) {
                console.log(err);
                res.redirect('/project?error=notfound');
            }
            else {
                project.projectName = req.body.ProjectName;
                project.tasks = req.body.Tasks;
                project.modifiedOn = Date.now();
                project.save(function(err, project) {
                    res.render('project-page', {
                       projectName: project.projectName,
                       createdBy: project.createdBy,
                       tasks: project.tasks,
                       projectID: project._id
                    });
                });
            }
        });
     }
 }


exports.confirmDelete = function(req, res) {
    const id = req.params.id;
    Project.findById(id, function(err, project) {
        res.render('project-delete-form', {
            title: 'Delete Project',
            name: req.session.user.name,
            _id: project._id,
            projectName: project.ProjectName
        });
    });
}


exports.doDelete = function(req, res) {
    if(req.body._id) {
        Project.findByIdAndRemove(
            req.body.id,
            function(err, project) {
                if(err) {
                    console.log(err);
                    return res.redirect('/project?error=deleting');
                }
                console.log(`Project deleted: ${project}`);
                res.redirect('/user');
            }
        );
    }
}
